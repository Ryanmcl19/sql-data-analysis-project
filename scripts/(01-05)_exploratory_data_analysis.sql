--====================================
-- Section 1: Database Exploration
--====================================


SELECT * FROM INFORMATION_SCHEMA.TABLES


-- Explore all columns in the Database
SELECT * FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'dim_customers'


-- Explore all countries our customers come from
SELECT DISTINCT Country FROM gold.dim_customers


-- Explore all categories in "The Major Divisions"
SELECT DISTINCT category, subcategory, product_name FROM gold.dim_products
ORDER BY 1,2,3



-- _____________________________________________________________________________

--=================================
-- Section 2: Date Range Exploration
--=================================


-- Task: Find the date of the first and last order
SELECT 
MIN(order_date) AS first_order_date, 
MAX(order_date) AS last_order_date,
DATEDIFF(DAY, MIN(order_date), MAX(order_date)) AS order_range_days
FROM gold.fact_sales



-- Task: Find the youngest and oldest customer
SELECT
MIN(birthdate) AS oldest_birthdate,
DATEDIFF(year, MIN(birthdate), GETDATE()) AS oldest_age,
MAX(birthdate) AS youngest_birthdate,
DATEDIFF(year, MAX(birthdate), GETDATE()) AS youngest_age
FROM gold.dim_customers

-- ____________________________________________________________________

--===================================
-- Section 3: Measure Exploration
--===================================


-- Find the Total Sales
SELECT SUM(sales_amount) AS total_sales FROM gold.fact_sales

-- Find how many items are sold
SELECT SUM(quantity) AS total_items_sold FROM gold.fact_sales

-- Find the avg selling price
SELECT AVG(price) AS avg_price FROM gold.fact_sales

-- Find the total number of orders
SELECT COUNT(DISTINCT(order_number)) AS total_order_count FROM gold.fact_sales

-- Find the total number of unique products sold
SELECT COUNT(DISTINCT(product_key)) AS total_product_unique FROM gold.fact_sales

-- Find the total number of products
SELECT COUNT(DISTINCT product_key) AS total_product_count FROM gold.dim_products

-- Find the total number of customers
SELECT COUNT(DISTINCT(customer_key)) AS total_customer_count FROM gold.dim_customers 

--Find the total number of customers that have placed an order
SELECT COUNT(DISTINCT customer_key) AS total_customer_count FROM gold.fact_sales WHERE sales_amount > 0



-- Task: Generate a report that shows all key metrics of the business

SELECT 'Total Sales' AS measure_name, SUM(sales_amount) AS measure_value FROM gold.fact_sales
UNION ALL 
SELECT 'Total Quantity' AS measure_name, SUM(quantity) AS measure_value FROM gold.fact_sales
UNION ALL
SELECT 'Average Price' AS measure_name, AVG(price) AS measure_value FROM gold.fact_sales
UNION ALL
SELECT 'Total Order Count' AS measure_name, COUNT(DISTINCT order_number) AS measure_value FROM gold.fact_sales
UNION ALL
SELECT 'Unique Sold Product Count' AS measure_name, COUNT(DISTINCT product_key) AS measure_value FROM gold.fact_sales
UNION ALL
SELECT 'Total Unique Product Count' AS measure_name, COUNT(DISTINCT product_key) AS measure_value FROM gold.dim_products
UNION ALL 
SELECT 'Total Customer Count' AS measure_name, COUNT(DISTINCT customer_key) AS measure_value FROM gold.dim_customers



-- _________________________________________________________________________________________________________________________

--==================================
-- Section 4: Magnitude Analysis
--==================================
 

 -- Find the total customers by countries
 SELECT
 country,
 COUNT(customer_key) AS total_customers
 FROM gold.dim_customers
 GROUP BY country
 ORDER BY total_customers DESC

 -- Find total customers by gender
 SELECT
gender,
COUNT(customer_key) AS total_customers
FROM gold.dim_customers
GROUP BY country, gender
ORDER BY total_customers DESC

 -- Find total products by category
SELECT
category,
COUNT(product_key) AS total_products
FROM gold.dim_products
GROUP BY category
ORDER BY total_products DESC

-- What is the average cost in each category
SELECT
category,
AVG(cost) AS avg_costs
FROM gold.dim_products
GROUP BY category
ORDER BY avg_costs DESC

 -- What is the total revenue generated for each category
SELECT
p.category,
SUM(s.sales_amount) AS total_revenue
FROM gold.fact_sales AS s
LEFT JOIN gold.dim_products AS p
ON p.product_key = s.product_key
GROUP BY p.category
ORDER BY total_revenue DESC

 -- Find total revenue generated by each customer
SELECT
c.customer_key,
c.first_name,
c.last_name,
SUM(s.sales_amount) AS total_revenue
FROM gold.fact_sales AS s
LEFT JOIN gold.dim_customers AS c
ON c.customer_key = s.customer_key
GROUP BY
c.customer_key,
c.first_name,
c.last_name
ORDER BY total_revenue DESC

 -- What is the distribution of sold items across countries
SELECT
c.country,
SUM(s.quantity) AS total_sold_items
FROM gold.fact_sales AS s
LEFT JOIN gold.dim_customers AS c
ON c.customer_key = s.customer_key
GROUP BY c.country
ORDER BY total_sold_items DESC

--______________________________________________________________________________

--================================
-- Section 5: Ranking Analysis
--================================


-- Which 5 products generate the highest revenue
SELECT TOP 5
p.product_name,
SUM(s.sales_amount) AS total_revenue
FROM gold.fact_sales AS s
LEFT JOIN gold.dim_products AS p
ON p.product_key = s.product_key
GROUP BY p.product_name
ORDER BY total_revenue DESC


-- What are the 5 worst-performing products in terms of sales
SELECT TOP 5
p.product_name,
SUM(s.sales_amount) AS total_revenue
FROM gold.fact_sales AS s
LEFT JOIN gold.dim_products AS p
ON p.product_key = s.product_key
GROUP BY p.product_name
ORDER BY total_revenue ASC

-- Find the 5 products with the highest revenue using window functions
SELECT *
FROM (
	SELECT
	p.product_name,
	SUM(s.sales_amount) AS total_revenue,
	ROW_NUMBER() OVER (ORDER BY SUM(s.sales_amount) DESC) AS rank_products
	FROM gold.fact_sales AS s
	LEFT JOIN gold.dim_products AS p
	ON p.product_key = s.product_key
	GROUP BY p.product_name)t
WHERE rank_products <= 5


-- Find the Top 10 customers who have generated the highest revenue
SELECT TOP 10
c.customer_key,
c.first_name,
c.last_name,
SUM(s.sales_amount) AS total_revenue
FROM gold.fact_sales AS s
LEFT JOIN gold.dim_customers AS c
ON c.customer_key = s.customer_key
GROUP BY
c.customer_key,
c.first_name,
c.last_name
ORDER BY total_revenue DESC

-- Find the 3 customers with the fewest orders placed
SELECT TOP 3
c.customer_key,
c.first_name,
c.last_name,
COUNT(order_number) AS total_orders
FROM gold.fact_sales AS s
LEFT JOIN gold.dim_customers AS c
ON c.customer_key = s.customer_key
GROUP BY
c.customer_key,
c.first_name,
c.last_name
ORDER BY total_orders ASC